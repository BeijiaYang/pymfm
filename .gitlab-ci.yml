variables:
  DOCKER_IMAGE_DOCS: $CI_REGISTRY_IMAGE/pymfm_docs:latest

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

build-page:       # This job runs in the build stage, which runs first.
  image: sphinxdoc/sphinx
  stage: build
  script:
    - pip3 install sphinx_rtd_theme
    - pip3 install -e .
    - pip3 install -r requirements.txt
    - cd ./docs
    - make html
  artifacts:
    name: pymfm-static-docs
    when: on_success
    expire_in: 3 days
    paths:
      - ./docs/_build

build-image:
  stage: build
  needs: 
    - build-page
  tags:
    - docker
  script:
    - echo $CI_REGISTRY_USER 
    - echo $CI_REGISTRY_PASSWORD
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --file $CI_PROJECT_DIR/dockerfile-docs --tag ${DOCKER_IMAGE_DOCS} .
    - docker push ${DOCKER_IMAGE_DOCS}

# unit-test-job:   # This job runs in the test stage.
#   stage: test    # It only starts when the job in the build stage completes successfully.
#   script:
#     - echo "Running unit tests... This will take about 60 seconds."
#     - sleep 60
#     - echo "Code coverage is 90%"

# lint-test-job:   # This job also runs in the test stage.
#   stage: test    # It can run at the same time as unit-test-job (in parallel).
#   script:
#     - echo "Linting code... This will take about 10 seconds."
#     - sleep 10
#     - echo "No lint issues found."

# deploy-job:      # This job runs in the deploy stage.
#   stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
#   environment: production
#   script:
#     - echo "Deploying application..."
#     - echo "Application successfully deployed."
